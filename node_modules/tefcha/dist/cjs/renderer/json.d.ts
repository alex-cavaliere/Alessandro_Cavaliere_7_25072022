import { MeasureTextFunc, Shape } from '../shape';
import { Config } from '../config';
interface RenderParam {
    src: string;
}
declare class Renderer {
    dummySVG: SVGElement;
    _document: Document;
    src: string;
    config: Config;
    constructor({ src, }: RenderParam);
    el: (tagName: string, attrs?: any, ...children: (Element | string)[]) => SVGElement;
    createTextSVGElement: (text: string, attrs?: any) => SVGElement;
    measureText: MeasureTextFunc;
    renderShape: ({ jsonOutput, shape, config, offsetX, offsetY, }: {
        jsonOutput: any;
        shape: Shape;
        config: Config;
        offsetX?: number | undefined;
        offsetY?: number | undefined;
    }) => void;
    render: () => any[];
}
declare const render: (param: RenderParam) => any[];
export { render, Renderer, };
//# sourceMappingURL=json.d.ts.map