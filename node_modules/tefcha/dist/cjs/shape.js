"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseShape = exports.Group = exports.Diamond = exports.Frame = exports.Rect = exports.Text = exports.Path = exports.Point = void 0;
var max = Math.max, min = Math.min;
var BaseShape = /** @class */ (function () {
    function BaseShape(_a) {
        var _this = this;
        var _b = _a.x, x = _b === void 0 ? 0 : _b, _c = _a.y, y = _c === void 0 ? 0 : _c, _d = _a.w, w = _d === void 0 ? 0 : _d, _e = _a.h, h = _e === void 0 ? 0 : _e, _f = _a.minX, minX = _f === void 0 ? 0 : _f, _g = _a.minY, minY = _g === void 0 ? 0 : _g, _h = _a.maxX, maxX = _h === void 0 ? 0 : _h, _j = _a.maxY, maxY = _j === void 0 ? 0 : _j;
        this.trans = function (dx, dy) {
            _this.x += dx;
            _this.y += dy;
            return _this;
        };
        this.x = x;
        this.y = y;
        this.w = w;
        this.h = h;
        this.minX = minX;
        this.minY = minY;
        this.maxX = maxX;
        this.maxY = maxY;
    }
    return BaseShape;
}());
exports.BaseShape = BaseShape;
var Point = /** @class */ (function (_super) {
    __extends(Point, _super);
    function Point(_a) {
        var x = _a.x, y = _a.y;
        var _this = _super.call(this, { x: x, y: y }) || this;
        _this.clone = function () {
            return new Point({ x: _this.x, y: _this.y });
        };
        _this.type = 'point';
        return _this;
    }
    return Point;
}(BaseShape));
exports.Point = Point;
var Path = /** @class */ (function (_super) {
    __extends(Path, _super);
    function Path(_a) {
        var x = _a.x, y = _a.y, cmds = _a.cmds, _b = _a.isArrow, isArrow = _b === void 0 ? false : _b;
        var _this = this;
        var px = 0;
        var py = 0;
        var minX = 0;
        var minY = 0;
        var maxX = 0;
        var maxY = 0;
        cmds.forEach(function (cmd) {
            var cmdName = cmd[0], step = cmd[1];
            if (cmdName === 'h') {
                px += step;
            }
            else {
                py += step;
            }
            minX = min(minX, px);
            minY = min(minY, py);
            maxX = max(maxX, px);
            maxY = max(maxY, py);
        });
        _this = _super.call(this, {
            x: x, y: y,
            minX: minX, minY: minY, maxX: maxX, maxY: maxY,
            w: maxX - minX,
            h: maxY - minY,
        }) || this;
        _this.cmds = cmds;
        _this.isArrow = isArrow;
        _this.type = 'path';
        return _this;
    }
    Path.vline = function (_a) {
        var x = _a.x, y = _a.y, step = _a.step, _b = _a.isArrow, isArrow = _b === void 0 ? false : _b;
        return new Path({
            x: x, y: y,
            cmds: [
                ['v', step],
            ],
            isArrow: isArrow,
        });
    };
    Path.hline = function (_a) {
        var x = _a.x, y = _a.y, step = _a.step, _b = _a.isArrow, isArrow = _b === void 0 ? false : _b;
        return new Path({
            x: x, y: y,
            cmds: [
                ['h', step],
            ],
            isArrow: isArrow,
        });
    };
    return Path;
}(BaseShape));
exports.Path = Path;
var Text = /** @class */ (function (_super) {
    __extends(Text, _super);
    function Text(_a) {
        var content = _a.content, w = _a.w, h = _a.h, _b = _a.x, x = _b === void 0 ? 0 : _b, _c = _a.y, y = _c === void 0 ? 0 : _c, _d = _a.isLabel, isLabel = _d === void 0 ? false : _d;
        var _this = _super.call(this, {
            x: x, y: y,
            maxX: w,
            maxY: h,
            w: w, h: h,
        }) || this;
        _this.content = content;
        _this.type = 'text';
        _this.isLabel = isLabel;
        return _this;
    }
    Text.byMeas = function (_a) {
        var _b = _a.x, x = _b === void 0 ? 0 : _b, _c = _a.y, y = _c === void 0 ? 0 : _c, text = _a.text, attrs = _a.attrs, meas = _a.meas, isLabel = _a.isLabel;
        var _d = meas(text, attrs), w = _d.w, h = _d.h;
        return new Text({
            content: text,
            x: x, y: y,
            w: w, h: h,
            isLabel: isLabel,
        });
    };
    return Text;
}(BaseShape));
exports.Text = Text;
var Rect = /** @class */ (function (_super) {
    __extends(Rect, _super);
    function Rect(_a) {
        var _b = _a.x, x = _b === void 0 ? 0 : _b, _c = _a.y, y = _c === void 0 ? 0 : _c, w = _a.w, h = _a.h;
        var _this = _super.call(this, { x: x, y: y, w: w, h: h, maxX: w, maxY: h }) || this;
        _this.type = 'rect';
        return _this;
    }
    return Rect;
}(BaseShape));
exports.Rect = Rect;
var Frame = /** @class */ (function (_super) {
    __extends(Frame, _super);
    function Frame(_a) {
        var _b = _a.x, x = _b === void 0 ? 0 : _b, _c = _a.y, y = _c === void 0 ? 0 : _c, w = _a.w, h = _a.h;
        var _this = _super.call(this, { x: x, y: y, w: w, h: h, maxX: w, maxY: h }) || this;
        _this.type = 'frame';
        return _this;
    }
    return Frame;
}(BaseShape));
exports.Frame = Frame;
var Diamond = /** @class */ (function (_super) {
    __extends(Diamond, _super);
    function Diamond(_a) {
        var _b = _a.x, x = _b === void 0 ? 0 : _b, _c = _a.y, y = _c === void 0 ? 0 : _c, w = _a.w, h = _a.h;
        var _this = _super.call(this, { x: x, y: y, w: w, h: h, maxX: w, maxY: h }) || this;
        _this.type = 'diamond';
        return _this;
    }
    return Diamond;
}(BaseShape));
exports.Diamond = Diamond;
var Group = /** @class */ (function (_super) {
    __extends(Group, _super);
    function Group(_a) {
        var x = _a.x, y = _a.y, children = _a.children;
        var _this = _super.call(this, { x: x, y: y }) || this;
        _this.add = function (shape) {
            _this.minX = min(_this.minX, shape.x + shape.minX);
            _this.minY = min(_this.minY, shape.y + shape.minY);
            _this.maxX = max(_this.maxX, shape.x + shape.maxX);
            _this.maxY = max(_this.maxY, shape.y + shape.maxY);
            _this.w = _this.maxX - _this.minX;
            _this.h = _this.maxY - _this.minY;
            _this.children.push(shape);
            return _this;
        };
        if (children.length === 0) {
            // add dummy shape.
            children = __spreadArrays(children, [new Point({ x: x, y: y })]);
        }
        _this.minX = min.apply(void 0, children.map(function (c) { return c.x + c.minX; }));
        _this.minY = min.apply(void 0, children.map(function (c) { return c.y + c.minY; }));
        _this.maxX = max.apply(void 0, children.map(function (c) { return c.x + c.maxX; }));
        _this.maxY = max.apply(void 0, children.map(function (c) { return c.y + c.maxY; }));
        _this.w = _this.maxX - _this.minX;
        _this.h = _this.maxY - _this.minY;
        _this.type = 'group';
        _this.children = children;
        return _this;
    }
    return Group;
}(BaseShape));
exports.Group = Group;
//# sourceMappingURL=shape.js.map