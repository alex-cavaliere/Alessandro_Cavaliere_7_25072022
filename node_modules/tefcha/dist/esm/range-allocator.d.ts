interface RangeList {
    start: number;
    end: number;
    next: RangeList | RangeListTail;
}
interface RangeListTail {
    start: number;
    end: number;
    next: null;
}
declare const createRangeList: (...ranges: [number, number][]) => RangeList;
declare class RangeAllocator {
    private readonly head;
    constructor(rangeList: RangeList);
    clone: () => RangeAllocator;
    cloneDeep: () => RangeAllocator;
    findSpace: (start: number, size: number) => number;
    merge: (start: number, size: number) => void;
    ranges: () => {
        start: number;
        end: number;
    }[];
    mergeAllocator: (allocator: RangeAllocator) => void;
}
export { RangeList, createRangeList, RangeAllocator, };
//# sourceMappingURL=range-allocator.d.ts.map