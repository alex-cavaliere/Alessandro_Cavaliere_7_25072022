import { Config } from './config';
declare class TefchaError extends Error {
    lineno: number | null;
    msg: string;
    src: string;
    type: 'tefcha';
    constructor({ lineno, msg, src }: {
        lineno?: number;
        msg: string;
        src?: string;
    });
}
declare const NODE_TYPES: readonly ["if", "else", "elif", "while", "for", "do", "switch", "case", "try", "except", "continue", "break", "pass", "program", "none", "text"];
declare type NodeType = (typeof NODE_TYPES)[number];
interface ASTNode {
    type: NodeType;
    lineno: number;
    content: string;
    children: ASTNode[];
}
declare const parse: (src: string, config: Config) => ASTNode;
export { ASTNode, parse, TefchaError, };
//# sourceMappingURL=parser.d.ts.map